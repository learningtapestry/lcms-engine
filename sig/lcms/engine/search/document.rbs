module Lcms
  module Engine
    module Search
      class Document < ElasticSearchDocument
        METADATA_FIELDS: ::Array["description" | "teaser" | "title" | "lesson_objective"]

        def self.build_from: (untyped model) -> untyped

        def self.doc_type: (untyped model) -> untyped

        def self.document_metadata: (untyped model) -> (nil | untyped)

        # Position mask:
        # - Since lessons uses 4 blocks of 2 numbers for (grade, mod, unit, lesson),
        #   we use 5 blocks to place them after lessons.
        # - the first position is realted to the resource type (always starting
        #   with 9 to be placed after the lessons).
        # - The second most significant is related to the grade
        # - The last position is the number of different grades covered, i.e:
        #   a resource with 3 different grades show after one with 2, (more specific
        #   at the top, more generic at the bottom)
        def self.grade_position: (untyped model) -> untyped

        def self.resource_position: (untyped model) -> untyped

        # Overrides ElasticSearchDocument.search to include standards search
        def self.search: (untyped term, ?::Hash[untyped, untyped] options) -> untyped

        private

        def self.attrs_from_page: (untyped model) -> { description: untyped, doc_type: "page", grade: ::Array[untyped], id: ::String, model_type: :page, permalink: untyped, slug: untyped, tag_keywords: untyped, teaser: untyped, title: untyped }

        def self.attrs_from_resource: (untyped model) -> { breadcrumbs: untyped, description: untyped, doc_type: untyped, document_metadata: untyped, grade: untyped, id: ::String, model_id: untyped, model_type: "resource", position: untyped, slug: untyped, subject: untyped, tag_authors: untyped, tag_keywords: untyped, tag_standards: untyped, tag_texts: untyped, teaser: untyped, title: untyped }

        public

        def grades: () -> untyped
      end
    end
  end
end
