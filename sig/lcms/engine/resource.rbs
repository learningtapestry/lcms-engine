module Lcms
  module Engine
    class Resource < ApplicationRecord
      include Filterable

      MEDIA_TYPES: untyped

      GENERIC_TYPES: untyped

      SUBJECTS: ::Array["ela" | "math"]

      HIERARCHY: ::Array[:subject | :grade | :module | :unit | :lesson]

      include Searchable

      include Navigable

      def self.metadata_from_dir: (untyped dir) -> untyped

      def self.find_by_directory: (*untyped dir) -> (nil | untyped)

      def self.hierarchy: () -> untyped

      # used for ransack search on the admin
      def self.ransackable_scopes: (?untyped? _auth_object) -> ::Array[:grades]

      # return resources tree by a curriculum name
      # if no argument is provided, then it's any curriculum tree.
      def self.tree: (?untyped? name) -> untyped

      def tree?: () -> untyped

      def assessment?: () -> untyped

      def media?: () -> untyped

      def generic?: () -> untyped

      def directory: () -> untyped

      def subject: () -> untyped

      def grades: () -> untyped

      def grades=: (untyped gds) -> untyped

      def lesson_number: () -> untyped

      def related_resources: () -> untyped

      def pdf_downloads?: (?untyped? category) -> untyped

      alias do_not_skip_indexing? should_index?

      def should_index?: () -> untyped

      def named_tags: () -> { keywords: untyped, resource_type: untyped, ell_appropriate: untyped, ccss_standards: untyped, ccss_domain: nil, ccss_cluster: nil, authors: untyped, texts: untyped }

      def filtered_named_tags: () -> untyped

      def tag_standards: () -> untyped

      def copyrights: () -> untyped

      def document: () -> untyped

      def document?: () -> untyped

      def next_hierarchy_level: () -> untyped

      def unit_bundles?: () -> untyped

      def self_and_ancestors_not_persisted: () -> untyped

      def update_metadata: () -> untyped

      def update_position: () -> untyped

      private

      def destroy_additional_resources: () -> untyped

      def update_descendants_author: () -> (nil | untyped)

      def update_descendants_meta: () -> (nil | untyped)

      def update_descendants_position: () -> (nil | untyped)

      def update_descendants_tree: () -> (nil | untyped)

      def update_slug: () -> untyped
    end
  end
end
