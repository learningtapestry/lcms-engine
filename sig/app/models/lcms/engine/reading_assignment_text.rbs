module Lcms
  module Engine
    class ReadingAssignmentText < ::Lcms::Engine::ApplicationRecord
      extend _ActiveRecord_Relation_ClassMethods[Lcms::Engine::ReadingAssignmentText, ActiveRecord_Relation, Integer]

      module GeneratedAttributeMethods
        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def name: () -> String

        def name=: (String) -> String

        def name?: () -> bool

        def name_changed?: () -> bool

        def name_change: () -> [ String?, String? ]

        def name_will_change!: () -> void

        def name_was: () -> String?

        def name_previously_changed?: () -> bool

        def name_previous_change: () -> Array[String?]?

        def name_previously_was: () -> String?

        def name_before_last_save: () -> String?

        def name_change_to_be_saved: () -> Array[String?]?

        def name_in_database: () -> String?

        def saved_change_to_name: () -> Array[String?]?

        def saved_change_to_name?: () -> bool

        def will_save_change_to_name?: () -> bool

        def restore_name!: () -> void

        def clear_name_change: () -> void

        def reading_assignment_author_id: () -> Integer

        def reading_assignment_author_id=: (Integer) -> Integer

        def reading_assignment_author_id?: () -> bool

        def reading_assignment_author_id_changed?: () -> bool

        def reading_assignment_author_id_change: () -> [ Integer?, Integer? ]

        def reading_assignment_author_id_will_change!: () -> void

        def reading_assignment_author_id_was: () -> Integer?

        def reading_assignment_author_id_previously_changed?: () -> bool

        def reading_assignment_author_id_previous_change: () -> Array[Integer?]?

        def reading_assignment_author_id_previously_was: () -> Integer?

        def reading_assignment_author_id_before_last_save: () -> Integer?

        def reading_assignment_author_id_change_to_be_saved: () -> Array[Integer?]?

        def reading_assignment_author_id_in_database: () -> Integer?

        def saved_change_to_reading_assignment_author_id: () -> Array[Integer?]?

        def saved_change_to_reading_assignment_author_id?: () -> bool

        def will_save_change_to_reading_assignment_author_id?: () -> bool

        def restore_reading_assignment_author_id!: () -> void

        def clear_reading_assignment_author_id_change: () -> void

        def created_at: () -> ActiveSupport::TimeWithZone?

        def created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def created_at?: () -> bool

        def created_at_changed?: () -> bool

        def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def created_at_will_change!: () -> void

        def created_at_was: () -> ActiveSupport::TimeWithZone?

        def created_at_previously_changed?: () -> bool

        def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_created_at?: () -> bool

        def will_save_change_to_created_at?: () -> bool

        def restore_created_at!: () -> void

        def clear_created_at_change: () -> void

        def updated_at: () -> ActiveSupport::TimeWithZone?

        def updated_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void
      end
      include GeneratedAttributeMethods
      def resource_reading_assignments: () -> Lcms::Engine::ResourceReadingAssignment::ActiveRecord_Associations_CollectionProxy
      def resource_reading_assignments=: (Lcms::Engine::ResourceReadingAssignment::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::ResourceReadingAssignment]) -> (Lcms::Engine::ResourceReadingAssignment::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::ResourceReadingAssignment])
      def resource_reading_assignment_ids: () -> Array[Integer]
      def resource_reading_assignment_ids=: (Array[Integer]) -> Array[Integer]
      def resources: () -> Lcms::Engine::Resource::ActiveRecord_Associations_CollectionProxy
      def resources=: (Lcms::Engine::Resource::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::Resource]) -> (Lcms::Engine::Resource::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::Resource])
      def resource_ids: () -> Array[Integer]
      def resource_ids=: (Array[Integer]) -> Array[Integer]

      def reading_assignment_author: () -> Lcms::Engine::ReadingAssignmentAuthor
      def reading_assignment_author=: (Lcms::Engine::ReadingAssignmentAuthor?) -> Lcms::Engine::ReadingAssignmentAuthor?
      def reload_reading_assignment_author: () -> Lcms::Engine::ReadingAssignmentAuthor?
      def build_reading_assignment_author: (untyped) -> Lcms::Engine::ReadingAssignmentAuthor
      def create_reading_assignment_author: (untyped) -> Lcms::Engine::ReadingAssignmentAuthor
      def create_reading_assignment_author!: (untyped) -> Lcms::Engine::ReadingAssignmentAuthor
      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::ReadingAssignmentText, Integer]
        include Enumerable[Lcms::Engine::ReadingAssignmentText]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::ReadingAssignmentText, Integer]
      end
    end
  end
end
