module Lcms
  module Engine
    class Material < ::Lcms::Engine::ApplicationRecord
      extend _ActiveRecord_Relation_ClassMethods[Lcms::Engine::Material, ActiveRecord_Relation, Integer]

      include Partable

      module Scopes
        def gdoc: -> ActiveRecord::Relation
        def pdf: -> ActiveRecord::Relation
        def where_metadata: (Hash[untyped, untyped]) -> ActiveRecord::Relation
        def where_metadata_like: ((Symbol | String), untyped) -> ActiveRecord::Relation
        def where_metadata_not: (Hash[untyped, untyped]) -> ActiveRecord::Relation
      end
      extend Scopes

      module Associations
        def document_parts: () -> Lcms::Engine::DocumentPart::ActiveRecord_Associations_CollectionProxy
        def document_parts=: (Lcms::Engine::DocumentPart::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::DocumentPart]) -> (Lcms::Engine::DocumentPart::ActiveRecord_Associations_CollectionProxy | Array[Lcms::Engine::DocumentPart])
        def document_part_ids: () -> Array[Integer]
        def document_part_ids=: (Array[Integer]) -> Array[Integer]
      end
      include Associations

      module GeneratedAttributeMethods
        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def file_id: () -> String

        def file_id=: (String) -> String

        def file_id?: () -> bool

        def file_id_changed?: () -> bool

        def file_id_change: () -> [ String?, String? ]

        def file_id_will_change!: () -> void

        def file_id_was: () -> String?

        def file_id_previously_changed?: () -> bool

        def file_id_previous_change: () -> Array[String?]?

        def file_id_previously_was: () -> String?

        def file_id_before_last_save: () -> String?

        def file_id_change_to_be_saved: () -> Array[String?]?

        def file_id_in_database: () -> String?

        def saved_change_to_file_id: () -> Array[String?]?

        def saved_change_to_file_id?: () -> bool

        def will_save_change_to_file_id?: () -> bool

        def restore_file_id!: () -> void

        def clear_file_id_change: () -> void

        def identifier: () -> String?

        def identifier=: (String?) -> String?

        def identifier?: () -> bool

        def identifier_changed?: () -> bool

        def identifier_change: () -> [ String?, String? ]

        def identifier_will_change!: () -> void

        def identifier_was: () -> String?

        def identifier_previously_changed?: () -> bool

        def identifier_previous_change: () -> Array[String?]?

        def identifier_previously_was: () -> String?

        def identifier_before_last_save: () -> String?

        def identifier_change_to_be_saved: () -> Array[String?]?

        def identifier_in_database: () -> String?

        def saved_change_to_identifier: () -> Array[String?]?

        def saved_change_to_identifier?: () -> bool

        def will_save_change_to_identifier?: () -> bool

        def restore_identifier!: () -> void

        def clear_identifier_change: () -> void

        def metadata: () -> untyped

        def metadata=: (untyped) -> untyped

        def metadata?: () -> bool

        def metadata_changed?: () -> bool

        def metadata_change: () -> [ untyped?, untyped? ]

        def metadata_will_change!: () -> void

        def metadata_was: () -> untyped?

        def metadata_previously_changed?: () -> bool

        def metadata_previous_change: () -> Array[untyped?]?

        def metadata_previously_was: () -> untyped?

        def metadata_before_last_save: () -> untyped?

        def metadata_change_to_be_saved: () -> Array[untyped?]?

        def metadata_in_database: () -> untyped?

        def saved_change_to_metadata: () -> Array[untyped?]?

        def saved_change_to_metadata?: () -> bool

        def will_save_change_to_metadata?: () -> bool

        def restore_metadata!: () -> void

        def clear_metadata_change: () -> void

        def name: () -> String?

        def name=: (String?) -> String?

        def name?: () -> bool

        def name_changed?: () -> bool

        def name_change: () -> [ String?, String? ]

        def name_will_change!: () -> void

        def name_was: () -> String?

        def name_previously_changed?: () -> bool

        def name_previous_change: () -> Array[String?]?

        def name_previously_was: () -> String?

        def name_before_last_save: () -> String?

        def name_change_to_be_saved: () -> Array[String?]?

        def name_in_database: () -> String?

        def saved_change_to_name: () -> Array[String?]?

        def saved_change_to_name?: () -> bool

        def will_save_change_to_name?: () -> bool

        def restore_name!: () -> void

        def clear_name_change: () -> void

        def last_modified_at: () -> ActiveSupport::TimeWithZone?

        def last_modified_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def last_modified_at?: () -> bool

        def last_modified_at_changed?: () -> bool

        def last_modified_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def last_modified_at_will_change!: () -> void

        def last_modified_at_was: () -> ActiveSupport::TimeWithZone?

        def last_modified_at_previously_changed?: () -> bool

        def last_modified_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def last_modified_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def last_modified_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def last_modified_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def last_modified_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_last_modified_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_last_modified_at?: () -> bool

        def will_save_change_to_last_modified_at?: () -> bool

        def restore_last_modified_at!: () -> void

        def clear_last_modified_at_change: () -> void

        def last_author_email: () -> String?

        def last_author_email=: (String?) -> String?

        def last_author_email?: () -> bool

        def last_author_email_changed?: () -> bool

        def last_author_email_change: () -> [ String?, String? ]

        def last_author_email_will_change!: () -> void

        def last_author_email_was: () -> String?

        def last_author_email_previously_changed?: () -> bool

        def last_author_email_previous_change: () -> Array[String?]?

        def last_author_email_previously_was: () -> String?

        def last_author_email_before_last_save: () -> String?

        def last_author_email_change_to_be_saved: () -> Array[String?]?

        def last_author_email_in_database: () -> String?

        def saved_change_to_last_author_email: () -> Array[String?]?

        def saved_change_to_last_author_email?: () -> bool

        def will_save_change_to_last_author_email?: () -> bool

        def restore_last_author_email!: () -> void

        def clear_last_author_email_change: () -> void

        def last_author_name: () -> String?

        def last_author_name=: (String?) -> String?

        def last_author_name?: () -> bool

        def last_author_name_changed?: () -> bool

        def last_author_name_change: () -> [ String?, String? ]

        def last_author_name_will_change!: () -> void

        def last_author_name_was: () -> String?

        def last_author_name_previously_changed?: () -> bool

        def last_author_name_previous_change: () -> Array[String?]?

        def last_author_name_previously_was: () -> String?

        def last_author_name_before_last_save: () -> String?

        def last_author_name_change_to_be_saved: () -> Array[String?]?

        def last_author_name_in_database: () -> String?

        def saved_change_to_last_author_name: () -> Array[String?]?

        def saved_change_to_last_author_name?: () -> bool

        def will_save_change_to_last_author_name?: () -> bool

        def restore_last_author_name!: () -> void

        def clear_last_author_name_change: () -> void

        def original_content: () -> String?

        def original_content=: (String?) -> String?

        def original_content?: () -> bool

        def original_content_changed?: () -> bool

        def original_content_change: () -> [ String?, String? ]

        def original_content_will_change!: () -> void

        def original_content_was: () -> String?

        def original_content_previously_changed?: () -> bool

        def original_content_previous_change: () -> Array[String?]?

        def original_content_previously_was: () -> String?

        def original_content_before_last_save: () -> String?

        def original_content_change_to_be_saved: () -> Array[String?]?

        def original_content_in_database: () -> String?

        def saved_change_to_original_content: () -> Array[String?]?

        def saved_change_to_original_content?: () -> bool

        def will_save_change_to_original_content?: () -> bool

        def restore_original_content!: () -> void

        def clear_original_content_change: () -> void

        def version: () -> String?

        def version=: (String?) -> String?

        def version?: () -> bool

        def version_changed?: () -> bool

        def version_change: () -> [ String?, String? ]

        def version_will_change!: () -> void

        def version_was: () -> String?

        def version_previously_changed?: () -> bool

        def version_previous_change: () -> Array[String?]?

        def version_previously_was: () -> String?

        def version_before_last_save: () -> String?

        def version_change_to_be_saved: () -> Array[String?]?

        def version_in_database: () -> String?

        def saved_change_to_version: () -> Array[String?]?

        def saved_change_to_version?: () -> bool

        def will_save_change_to_version?: () -> bool

        def restore_version!: () -> void

        def clear_version_change: () -> void

        def created_at: () -> ActiveSupport::TimeWithZone

        def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def created_at?: () -> bool

        def created_at_changed?: () -> bool

        def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def created_at_will_change!: () -> void

        def created_at_was: () -> ActiveSupport::TimeWithZone?

        def created_at_previously_changed?: () -> bool

        def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_created_at?: () -> bool

        def will_save_change_to_created_at?: () -> bool

        def restore_created_at!: () -> void

        def clear_created_at_change: () -> void

        def updated_at: () -> ActiveSupport::TimeWithZone

        def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void

        def preview_links: () -> untyped?

        def preview_links=: (untyped?) -> untyped?

        def preview_links?: () -> bool

        def preview_links_changed?: () -> bool

        def preview_links_change: () -> [ untyped?, untyped? ]

        def preview_links_will_change!: () -> void

        def preview_links_was: () -> untyped?

        def preview_links_previously_changed?: () -> bool

        def preview_links_previous_change: () -> Array[untyped?]?

        def preview_links_previously_was: () -> untyped?

        def preview_links_before_last_save: () -> untyped?

        def preview_links_change_to_be_saved: () -> Array[untyped?]?

        def preview_links_in_database: () -> untyped?

        def saved_change_to_preview_links: () -> Array[untyped?]?

        def saved_change_to_preview_links?: () -> bool

        def will_save_change_to_preview_links?: () -> bool

        def restore_preview_links!: () -> void

        def clear_preview_links_change: () -> void

        def reimported_at: () -> ActiveSupport::TimeWithZone?

        def reimported_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def reimported_at?: () -> bool

        def reimported_at_changed?: () -> bool

        def reimported_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def reimported_at_will_change!: () -> void

        def reimported_at_was: () -> ActiveSupport::TimeWithZone?

        def reimported_at_previously_changed?: () -> bool

        def reimported_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def reimported_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def reimported_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def reimported_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def reimported_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_reimported_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_reimported_at?: () -> bool

        def will_save_change_to_reimported_at?: () -> bool

        def restore_reimported_at!: () -> void

        def clear_reimported_at_change: () -> void

        def links: () -> untyped?

        def links=: (untyped?) -> untyped?

        def links?: () -> bool

        def links_changed?: () -> bool

        def links_change: () -> [ untyped?, untyped? ]

        def links_will_change!: () -> void

        def links_was: () -> untyped?

        def links_previously_changed?: () -> bool

        def links_previous_change: () -> Array[untyped?]?

        def links_previously_was: () -> untyped?

        def links_before_last_save: () -> untyped?

        def links_change_to_be_saved: () -> Array[untyped?]?

        def links_in_database: () -> untyped?

        def saved_change_to_links: () -> Array[untyped?]?

        def saved_change_to_links?: () -> bool

        def will_save_change_to_links?: () -> bool

        def restore_links!: () -> void

        def clear_links_change: () -> void

        def css_styles: () -> String?

        def css_styles=: (String?) -> String?

        def css_styles?: () -> bool

        def css_styles_changed?: () -> bool

        def css_styles_change: () -> [ String?, String? ]

        def css_styles_will_change!: () -> void

        def css_styles_was: () -> String?

        def css_styles_previously_changed?: () -> bool

        def css_styles_previous_change: () -> Array[String?]?

        def css_styles_previously_was: () -> String?

        def css_styles_before_last_save: () -> String?

        def css_styles_change_to_be_saved: () -> Array[String?]?

        def css_styles_in_database: () -> String?

        def saved_change_to_css_styles: () -> Array[String?]?

        def saved_change_to_css_styles?: () -> bool

        def will_save_change_to_css_styles?: () -> bool

        def restore_css_styles!: () -> void

        def clear_css_styles_change: () -> void
      end
      include GeneratedAttributeMethods

      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::Material, Integer]
        include Enumerable[Lcms::Engine::Material]
        include Scopes
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::Material, Integer]
        include Scopes
      end

      def self.pg_search_scope: (*untyped) -> untyped
      def self.where_metadata_any_of: (untyped conditions) -> ActiveRecord::Relation

      def file_url: () -> ::String
      def optional_for?: (untyped document) -> untyped
      def pdf?: () -> untyped
      def source_type: () -> ("pdf" | "gdoc")
    end
  end
end
