module Lcms
  module Engine
    class User < ::Lcms::Engine::ApplicationRecord
      extend _ActiveRecord_Relation_ClassMethods[Lcms::Engine::User, ActiveRecord_Relation, Integer]

      def self.devise: (*untyped) -> untyped

      def generate_password: () -> untyped
      private def access_code_valid?: () -> (nil | untyped)
      private def confirmation_required?: () -> false

      module GeneratedAttributeMethods
        # from devise
        def password=: (String) -> untyped
        def password_confirmation=: (String) -> untyped

        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def name: () -> String?

        def name=: (String?) -> String?

        def name?: () -> bool

        def name_changed?: () -> bool

        def name_change: () -> [ String?, String? ]

        def name_will_change!: () -> void

        def name_was: () -> String?

        def name_previously_changed?: () -> bool

        def name_previous_change: () -> Array[String?]?

        def name_previously_was: () -> String?

        def name_before_last_save: () -> String?

        def name_change_to_be_saved: () -> Array[String?]?

        def name_in_database: () -> String?

        def saved_change_to_name: () -> Array[String?]?

        def saved_change_to_name?: () -> bool

        def will_save_change_to_name?: () -> bool

        def restore_name!: () -> void

        def clear_name_change: () -> void

        def created_at: () -> ActiveSupport::TimeWithZone

        def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def created_at?: () -> bool

        def created_at_changed?: () -> bool

        def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def created_at_will_change!: () -> void

        def created_at_was: () -> ActiveSupport::TimeWithZone?

        def created_at_previously_changed?: () -> bool

        def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_created_at?: () -> bool

        def will_save_change_to_created_at?: () -> bool

        def restore_created_at!: () -> void

        def clear_created_at_change: () -> void

        def updated_at: () -> ActiveSupport::TimeWithZone

        def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void

        def email: () -> String

        def email=: (String) -> String

        def email?: () -> bool

        def email_changed?: () -> bool

        def email_change: () -> [ String?, String? ]

        def email_will_change!: () -> void

        def email_was: () -> String?

        def email_previously_changed?: () -> bool

        def email_previous_change: () -> Array[String?]?

        def email_previously_was: () -> String?

        def email_before_last_save: () -> String?

        def email_change_to_be_saved: () -> Array[String?]?

        def email_in_database: () -> String?

        def saved_change_to_email: () -> Array[String?]?

        def saved_change_to_email?: () -> bool

        def will_save_change_to_email?: () -> bool

        def restore_email!: () -> void

        def clear_email_change: () -> void

        def encrypted_password: () -> String

        def encrypted_password=: (String) -> String

        def encrypted_password?: () -> bool

        def encrypted_password_changed?: () -> bool

        def encrypted_password_change: () -> [ String?, String? ]

        def encrypted_password_will_change!: () -> void

        def encrypted_password_was: () -> String?

        def encrypted_password_previously_changed?: () -> bool

        def encrypted_password_previous_change: () -> Array[String?]?

        def encrypted_password_previously_was: () -> String?

        def encrypted_password_before_last_save: () -> String?

        def encrypted_password_change_to_be_saved: () -> Array[String?]?

        def encrypted_password_in_database: () -> String?

        def saved_change_to_encrypted_password: () -> Array[String?]?

        def saved_change_to_encrypted_password?: () -> bool

        def will_save_change_to_encrypted_password?: () -> bool

        def restore_encrypted_password!: () -> void

        def clear_encrypted_password_change: () -> void

        def reset_password_token: () -> String?

        def reset_password_token=: (String?) -> String?

        def reset_password_token?: () -> bool

        def reset_password_token_changed?: () -> bool

        def reset_password_token_change: () -> [ String?, String? ]

        def reset_password_token_will_change!: () -> void

        def reset_password_token_was: () -> String?

        def reset_password_token_previously_changed?: () -> bool

        def reset_password_token_previous_change: () -> Array[String?]?

        def reset_password_token_previously_was: () -> String?

        def reset_password_token_before_last_save: () -> String?

        def reset_password_token_change_to_be_saved: () -> Array[String?]?

        def reset_password_token_in_database: () -> String?

        def saved_change_to_reset_password_token: () -> Array[String?]?

        def saved_change_to_reset_password_token?: () -> bool

        def will_save_change_to_reset_password_token?: () -> bool

        def restore_reset_password_token!: () -> void

        def clear_reset_password_token_change: () -> void

        def reset_password_sent_at: () -> ActiveSupport::TimeWithZone?

        def reset_password_sent_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def reset_password_sent_at?: () -> bool

        def reset_password_sent_at_changed?: () -> bool

        def reset_password_sent_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def reset_password_sent_at_will_change!: () -> void

        def reset_password_sent_at_was: () -> ActiveSupport::TimeWithZone?

        def reset_password_sent_at_previously_changed?: () -> bool

        def reset_password_sent_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def reset_password_sent_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def reset_password_sent_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def reset_password_sent_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def reset_password_sent_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_reset_password_sent_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_reset_password_sent_at?: () -> bool

        def will_save_change_to_reset_password_sent_at?: () -> bool

        def restore_reset_password_sent_at!: () -> void

        def clear_reset_password_sent_at_change: () -> void

        def remember_created_at: () -> ActiveSupport::TimeWithZone?

        def remember_created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def remember_created_at?: () -> bool

        def remember_created_at_changed?: () -> bool

        def remember_created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def remember_created_at_will_change!: () -> void

        def remember_created_at_was: () -> ActiveSupport::TimeWithZone?

        def remember_created_at_previously_changed?: () -> bool

        def remember_created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def remember_created_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def remember_created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def remember_created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def remember_created_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_remember_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_remember_created_at?: () -> bool

        def will_save_change_to_remember_created_at?: () -> bool

        def restore_remember_created_at!: () -> void

        def clear_remember_created_at_change: () -> void

        def sign_in_count: () -> Integer

        def sign_in_count=: (Integer) -> Integer

        def sign_in_count?: () -> bool

        def sign_in_count_changed?: () -> bool

        def sign_in_count_change: () -> [ Integer?, Integer? ]

        def sign_in_count_will_change!: () -> void

        def sign_in_count_was: () -> Integer?

        def sign_in_count_previously_changed?: () -> bool

        def sign_in_count_previous_change: () -> Array[Integer?]?

        def sign_in_count_previously_was: () -> Integer?

        def sign_in_count_before_last_save: () -> Integer?

        def sign_in_count_change_to_be_saved: () -> Array[Integer?]?

        def sign_in_count_in_database: () -> Integer?

        def saved_change_to_sign_in_count: () -> Array[Integer?]?

        def saved_change_to_sign_in_count?: () -> bool

        def will_save_change_to_sign_in_count?: () -> bool

        def restore_sign_in_count!: () -> void

        def clear_sign_in_count_change: () -> void

        def current_sign_in_at: () -> ActiveSupport::TimeWithZone?

        def current_sign_in_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def current_sign_in_at?: () -> bool

        def current_sign_in_at_changed?: () -> bool

        def current_sign_in_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def current_sign_in_at_will_change!: () -> void

        def current_sign_in_at_was: () -> ActiveSupport::TimeWithZone?

        def current_sign_in_at_previously_changed?: () -> bool

        def current_sign_in_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def current_sign_in_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def current_sign_in_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def current_sign_in_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def current_sign_in_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_current_sign_in_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_current_sign_in_at?: () -> bool

        def will_save_change_to_current_sign_in_at?: () -> bool

        def restore_current_sign_in_at!: () -> void

        def clear_current_sign_in_at_change: () -> void

        def last_sign_in_at: () -> ActiveSupport::TimeWithZone?

        def last_sign_in_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def last_sign_in_at?: () -> bool

        def last_sign_in_at_changed?: () -> bool

        def last_sign_in_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def last_sign_in_at_will_change!: () -> void

        def last_sign_in_at_was: () -> ActiveSupport::TimeWithZone?

        def last_sign_in_at_previously_changed?: () -> bool

        def last_sign_in_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def last_sign_in_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def last_sign_in_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def last_sign_in_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def last_sign_in_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_last_sign_in_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_last_sign_in_at?: () -> bool

        def will_save_change_to_last_sign_in_at?: () -> bool

        def restore_last_sign_in_at!: () -> void

        def clear_last_sign_in_at_change: () -> void

        def current_sign_in_ip: () -> IPAddr?

        def current_sign_in_ip=: (IPAddr?) -> IPAddr?

        def current_sign_in_ip?: () -> bool

        def current_sign_in_ip_changed?: () -> bool

        def current_sign_in_ip_change: () -> [ IPAddr?, IPAddr? ]

        def current_sign_in_ip_will_change!: () -> void

        def current_sign_in_ip_was: () -> IPAddr?

        def current_sign_in_ip_previously_changed?: () -> bool

        def current_sign_in_ip_previous_change: () -> Array[IPAddr?]?

        def current_sign_in_ip_previously_was: () -> IPAddr?

        def current_sign_in_ip_before_last_save: () -> IPAddr?

        def current_sign_in_ip_change_to_be_saved: () -> Array[IPAddr?]?

        def current_sign_in_ip_in_database: () -> IPAddr?

        def saved_change_to_current_sign_in_ip: () -> Array[IPAddr?]?

        def saved_change_to_current_sign_in_ip?: () -> bool

        def will_save_change_to_current_sign_in_ip?: () -> bool

        def restore_current_sign_in_ip!: () -> void

        def clear_current_sign_in_ip_change: () -> void

        def last_sign_in_ip: () -> IPAddr?

        def last_sign_in_ip=: (IPAddr?) -> IPAddr?

        def last_sign_in_ip?: () -> bool

        def last_sign_in_ip_changed?: () -> bool

        def last_sign_in_ip_change: () -> [ IPAddr?, IPAddr? ]

        def last_sign_in_ip_will_change!: () -> void

        def last_sign_in_ip_was: () -> IPAddr?

        def last_sign_in_ip_previously_changed?: () -> bool

        def last_sign_in_ip_previous_change: () -> Array[IPAddr?]?

        def last_sign_in_ip_previously_was: () -> IPAddr?

        def last_sign_in_ip_before_last_save: () -> IPAddr?

        def last_sign_in_ip_change_to_be_saved: () -> Array[IPAddr?]?

        def last_sign_in_ip_in_database: () -> IPAddr?

        def saved_change_to_last_sign_in_ip: () -> Array[IPAddr?]?

        def saved_change_to_last_sign_in_ip?: () -> bool

        def will_save_change_to_last_sign_in_ip?: () -> bool

        def restore_last_sign_in_ip!: () -> void

        def clear_last_sign_in_ip_change: () -> void

        def role: () -> Integer

        def role=: (Integer) -> Integer

        def role?: () -> bool

        def role_changed?: () -> bool

        def role_change: () -> [ Integer?, Integer? ]

        def role_will_change!: () -> void

        def role_was: () -> Integer?

        def role_previously_changed?: () -> bool

        def role_previous_change: () -> Array[Integer?]?

        def role_previously_was: () -> Integer?

        def role_before_last_save: () -> Integer?

        def role_change_to_be_saved: () -> Array[Integer?]?

        def role_in_database: () -> Integer?

        def saved_change_to_role: () -> Array[Integer?]?

        def saved_change_to_role?: () -> bool

        def will_save_change_to_role?: () -> bool

        def restore_role!: () -> void

        def clear_role_change: () -> void

        def access_code: () -> String?

        def access_code=: (String?) -> String?

        def access_code?: () -> bool

        def access_code_changed?: () -> bool

        def access_code_change: () -> [ String?, String? ]

        def access_code_will_change!: () -> void

        def access_code_was: () -> String?

        def access_code_previously_changed?: () -> bool

        def access_code_previous_change: () -> Array[String?]?

        def access_code_previously_was: () -> String?

        def access_code_before_last_save: () -> String?

        def access_code_change_to_be_saved: () -> Array[String?]?

        def access_code_in_database: () -> String?

        def saved_change_to_access_code: () -> Array[String?]?

        def saved_change_to_access_code?: () -> bool

        def will_save_change_to_access_code?: () -> bool

        def restore_access_code!: () -> void

        def clear_access_code_change: () -> void

        def confirmation_token: () -> String?

        def confirmation_token=: (String?) -> String?

        def confirmation_token?: () -> bool

        def confirmation_token_changed?: () -> bool

        def confirmation_token_change: () -> [ String?, String? ]

        def confirmation_token_will_change!: () -> void

        def confirmation_token_was: () -> String?

        def confirmation_token_previously_changed?: () -> bool

        def confirmation_token_previous_change: () -> Array[String?]?

        def confirmation_token_previously_was: () -> String?

        def confirmation_token_before_last_save: () -> String?

        def confirmation_token_change_to_be_saved: () -> Array[String?]?

        def confirmation_token_in_database: () -> String?

        def saved_change_to_confirmation_token: () -> Array[String?]?

        def saved_change_to_confirmation_token?: () -> bool

        def will_save_change_to_confirmation_token?: () -> bool

        def restore_confirmation_token!: () -> void

        def clear_confirmation_token_change: () -> void

        def confirmed_at: () -> ActiveSupport::TimeWithZone?

        def confirmed_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def confirmed_at?: () -> bool

        def confirmed_at_changed?: () -> bool

        def confirmed_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def confirmed_at_will_change!: () -> void

        def confirmed_at_was: () -> ActiveSupport::TimeWithZone?

        def confirmed_at_previously_changed?: () -> bool

        def confirmed_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def confirmed_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def confirmed_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def confirmed_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def confirmed_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_confirmed_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_confirmed_at?: () -> bool

        def will_save_change_to_confirmed_at?: () -> bool

        def restore_confirmed_at!: () -> void

        def clear_confirmed_at_change: () -> void

        def confirmation_sent_at: () -> ActiveSupport::TimeWithZone?

        def confirmation_sent_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def confirmation_sent_at?: () -> bool

        def confirmation_sent_at_changed?: () -> bool

        def confirmation_sent_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def confirmation_sent_at_will_change!: () -> void

        def confirmation_sent_at_was: () -> ActiveSupport::TimeWithZone?

        def confirmation_sent_at_previously_changed?: () -> bool

        def confirmation_sent_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def confirmation_sent_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def confirmation_sent_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def confirmation_sent_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def confirmation_sent_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_confirmation_sent_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_confirmation_sent_at?: () -> bool

        def will_save_change_to_confirmation_sent_at?: () -> bool

        def restore_confirmation_sent_at!: () -> void

        def clear_confirmation_sent_at_change: () -> void

        def unconfirmed_email: () -> String?

        def unconfirmed_email=: (String?) -> String?

        def unconfirmed_email?: () -> bool

        def unconfirmed_email_changed?: () -> bool

        def unconfirmed_email_change: () -> [ String?, String? ]

        def unconfirmed_email_will_change!: () -> void

        def unconfirmed_email_was: () -> String?

        def unconfirmed_email_previously_changed?: () -> bool

        def unconfirmed_email_previous_change: () -> Array[String?]?

        def unconfirmed_email_previously_was: () -> String?

        def unconfirmed_email_before_last_save: () -> String?

        def unconfirmed_email_change_to_be_saved: () -> Array[String?]?

        def unconfirmed_email_in_database: () -> String?

        def saved_change_to_unconfirmed_email: () -> Array[String?]?

        def saved_change_to_unconfirmed_email?: () -> bool

        def will_save_change_to_unconfirmed_email?: () -> bool

        def restore_unconfirmed_email!: () -> void

        def clear_unconfirmed_email_change: () -> void

        def survey: () -> untyped?

        def survey=: (untyped?) -> untyped?

        def survey?: () -> bool

        def survey_changed?: () -> bool

        def survey_change: () -> [ untyped?, untyped? ]

        def survey_will_change!: () -> void

        def survey_was: () -> untyped?

        def survey_previously_changed?: () -> bool

        def survey_previous_change: () -> Array[untyped?]?

        def survey_previously_was: () -> untyped?

        def survey_before_last_save: () -> untyped?

        def survey_change_to_be_saved: () -> Array[untyped?]?

        def survey_in_database: () -> untyped?

        def saved_change_to_survey: () -> Array[untyped?]?

        def saved_change_to_survey?: () -> bool

        def will_save_change_to_survey?: () -> bool

        def restore_survey!: () -> void

        def clear_survey_change: () -> void
      end
      include GeneratedAttributeMethods

      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::User, Integer]
        include Enumerable[Lcms::Engine::User]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::User, Integer]
      end
    end
  end
end
