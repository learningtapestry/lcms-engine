module Lcms
  module Engine
    class DocumentBundle < ::Lcms::Engine::ApplicationRecord
      extend _ActiveRecord_Relation_ClassMethods[Lcms::Engine::DocumentBundle, ActiveRecord_Relation, Integer]

      CATEGORIES: ::Array["full" | "tm" | "sm"]

      CONTENT_TYPES: ::Array["pdf" | "gdoc"]

      def self.update_bundle: (untyped resource, ?::String category) -> untyped
      def self.update_pdf_bundle: (untyped resource, untyped category) -> (nil | untyped)
      def self.update_gdoc_bundle: (untyped resource) -> (nil | untyped)

      module GeneratedAttributeMethods
        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def category: () -> String

        def category=: (String) -> String

        def category?: () -> bool

        def category_changed?: () -> bool

        def category_change: () -> [ String?, String? ]

        def category_will_change!: () -> void

        def category_was: () -> String?

        def category_previously_changed?: () -> bool

        def category_previous_change: () -> Array[String?]?

        def category_previously_was: () -> String?

        def category_before_last_save: () -> String?

        def category_change_to_be_saved: () -> Array[String?]?

        def category_in_database: () -> String?

        def saved_change_to_category: () -> Array[String?]?

        def saved_change_to_category?: () -> bool

        def will_save_change_to_category?: () -> bool

        def restore_category!: () -> void

        def clear_category_change: () -> void

        def file: () -> String?

        def file=: (String?) -> String?
                 | (::File) -> String?

        def file?: () -> bool

        def file_changed?: () -> bool

        def file_change: () -> [ String?, String? ]

        def file_will_change!: () -> void

        def file_was: () -> String?

        def file_previously_changed?: () -> bool

        def file_previous_change: () -> Array[String?]?

        def file_previously_was: () -> String?

        def file_before_last_save: () -> String?

        def file_change_to_be_saved: () -> Array[String?]?

        def file_in_database: () -> String?

        def saved_change_to_file: () -> Array[String?]?

        def saved_change_to_file?: () -> bool

        def will_save_change_to_file?: () -> bool

        def restore_file!: () -> void

        def clear_file_change: () -> void

        def resource_id: () -> Integer?

        def resource_id=: (Integer?) -> Integer?

        def resource_id?: () -> bool

        def resource_id_changed?: () -> bool

        def resource_id_change: () -> [ Integer?, Integer? ]

        def resource_id_will_change!: () -> void

        def resource_id_was: () -> Integer?

        def resource_id_previously_changed?: () -> bool

        def resource_id_previous_change: () -> Array[Integer?]?

        def resource_id_previously_was: () -> Integer?

        def resource_id_before_last_save: () -> Integer?

        def resource_id_change_to_be_saved: () -> Array[Integer?]?

        def resource_id_in_database: () -> Integer?

        def saved_change_to_resource_id: () -> Array[Integer?]?

        def saved_change_to_resource_id?: () -> bool

        def will_save_change_to_resource_id?: () -> bool

        def restore_resource_id!: () -> void

        def clear_resource_id_change: () -> void

        def created_at: () -> ActiveSupport::TimeWithZone

        def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def created_at?: () -> bool

        def created_at_changed?: () -> bool

        def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def created_at_will_change!: () -> void

        def created_at_was: () -> ActiveSupport::TimeWithZone?

        def created_at_previously_changed?: () -> bool

        def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def created_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_created_at?: () -> bool

        def will_save_change_to_created_at?: () -> bool

        def restore_created_at!: () -> void

        def clear_created_at_change: () -> void

        def updated_at: () -> ActiveSupport::TimeWithZone

        def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void

        def url: () -> String?

        def url=: (String?) -> String?

        def url?: () -> bool

        def url_changed?: () -> bool

        def url_change: () -> [ String?, String? ]

        def url_will_change!: () -> void

        def url_was: () -> String?

        def url_previously_changed?: () -> bool

        def url_previous_change: () -> Array[String?]?

        def url_previously_was: () -> String?

        def url_before_last_save: () -> String?

        def url_change_to_be_saved: () -> Array[String?]?

        def url_in_database: () -> String?

        def saved_change_to_url: () -> Array[String?]?

        def saved_change_to_url?: () -> bool

        def will_save_change_to_url?: () -> bool

        def restore_url!: () -> void

        def clear_url_change: () -> void

        def content_type: () -> String

        def content_type=: (String) -> String

        def content_type?: () -> bool

        def content_type_changed?: () -> bool

        def content_type_change: () -> [ String?, String? ]

        def content_type_will_change!: () -> void

        def content_type_was: () -> String?

        def content_type_previously_changed?: () -> bool

        def content_type_previous_change: () -> Array[String?]?

        def content_type_previously_was: () -> String?

        def content_type_before_last_save: () -> String?

        def content_type_change_to_be_saved: () -> Array[String?]?

        def content_type_in_database: () -> String?

        def saved_change_to_content_type: () -> Array[String?]?

        def saved_change_to_content_type?: () -> bool

        def will_save_change_to_content_type?: () -> bool

        def restore_content_type!: () -> void

        def clear_content_type_change: () -> void
      end
      include GeneratedAttributeMethods

      def resource: () -> Lcms::Engine::Resource
      def resource=: (Lcms::Engine::Resource?) -> Lcms::Engine::Resource?
      def reload_resource: () -> Lcms::Engine::Resource?
      def build_resource: (untyped) -> Lcms::Engine::Resource
      def create_resource: (untyped) -> Lcms::Engine::Resource
      def create_resource!: (untyped) -> Lcms::Engine::Resource
      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::DocumentBundle, Integer]
        include Enumerable[Lcms::Engine::DocumentBundle]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::DocumentBundle, Integer]
      end
    end
  end
end
