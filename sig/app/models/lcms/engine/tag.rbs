module Lcms
  module Engine
    class Tag < ::ActsAsTaggableOn::Tag
      extend _ActiveRecord_Relation_ClassMethods[Lcms::Engine::Tag, ActiveRecord_Relation, Integer]

      module GeneratedAttributeMethods
        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def name: () -> String?

        def name=: (String?) -> String?

        def name?: () -> bool

        def name_changed?: () -> bool

        def name_change: () -> [ String?, String? ]

        def name_will_change!: () -> void

        def name_was: () -> String?

        def name_previously_changed?: () -> bool

        def name_previous_change: () -> Array[String?]?

        def name_previously_was: () -> String?

        def name_before_last_save: () -> String?

        def name_change_to_be_saved: () -> Array[String?]?

        def name_in_database: () -> String?

        def saved_change_to_name: () -> Array[String?]?

        def saved_change_to_name?: () -> bool

        def will_save_change_to_name?: () -> bool

        def restore_name!: () -> void

        def clear_name_change: () -> void

        def taggings_count: () -> Integer?

        def taggings_count=: (Integer?) -> Integer?

        def taggings_count?: () -> bool

        def taggings_count_changed?: () -> bool

        def taggings_count_change: () -> [ Integer?, Integer? ]

        def taggings_count_will_change!: () -> void

        def taggings_count_was: () -> Integer?

        def taggings_count_previously_changed?: () -> bool

        def taggings_count_previous_change: () -> Array[Integer?]?

        def taggings_count_previously_was: () -> Integer?

        def taggings_count_before_last_save: () -> Integer?

        def taggings_count_change_to_be_saved: () -> Array[Integer?]?

        def taggings_count_in_database: () -> Integer?

        def saved_change_to_taggings_count: () -> Array[Integer?]?

        def saved_change_to_taggings_count?: () -> bool

        def will_save_change_to_taggings_count?: () -> bool

        def restore_taggings_count!: () -> void

        def clear_taggings_count_change: () -> void
      end
      include GeneratedAttributeMethods
      def taggings: () -> ActsAsTaggableOn::Tagging::ActiveRecord_Associations_CollectionProxy
      def taggings=: (ActsAsTaggableOn::Tagging::ActiveRecord_Associations_CollectionProxy | Array[ActsAsTaggableOn::Tagging]) -> (ActsAsTaggableOn::Tagging::ActiveRecord_Associations_CollectionProxy | Array[ActsAsTaggableOn::Tagging])
      def tagging_ids: () -> Array[Integer]
      def tagging_ids=: (Array[Integer]) -> Array[Integer]

      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::Tag, Integer]
        include Enumerable[Lcms::Engine::Tag]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[Lcms::Engine::Tag, Integer]
      end
    end
  end
end
