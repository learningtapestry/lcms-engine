%ub-btn-font {
  @include txt-element(button);
}

%ld-btn-padding {
  padding-bottom: 10px !important;
  padding-top: 13px !important;
}

@mixin ub-button-hollow($background: $primary-color, $color: $ub-white, $color-hover: $ub-white) {
  background-color: transparent;
  border: 1px solid $background;
  color: $color;

  &:hover, &:focus {
    background-color: $background;
    border-color: transparent;
    color: $color-hover;
  }
}

.ub-close-button {
  background: $medium-gray;
  border-radius: 0;
  color: $ub-white;
  cursor: pointer;
  height: $filterbar-square;
  line-height: 1;
  padding: 0;
  right: 0;
  top: 0;
  width: $filterbar-square;
  span i { font-size: 2rem; }
}

.o-btn {
  @extend %btn-shadow;
  @include button-base;
  @include txt-element(button);
  margin-bottom: $ub-xs-padding;
  padding-left: 2.5rem;
  padding-right: 2.5rem;

  @include breakpoint(medium) {
    margin: 0;
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);

    @include m(#{$type}) {
      @include button-style($background: $color, $background-hover: auto, $color: $btn-color);
    }
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);

    @include m(bordered-#{$type}) {
      @include ub-button-hollow($background: $color, $color: $btn-color);
    }
  }

  @each $type, $color in $ub-buttons {
    @include m(2bordered-#{$type}) {
      @include ub-button-hollow($background: $color, $color: $color);
    }
  }

  @include m(register) {
    @include ub-button-hollow($background: $ub-white, $color: $ub-white, $color-hover: $ub-primary);
    @include txt-element(button-register);
  }

  @include m(expand) {
    @include button-expand(true);
  }

  @include m(xs-full) {
    @include breakpoint(small only) {
      width: 100%;
    }
  }
}

.o-ub-btn {
  @extend %btn-shadow;
  @include button-base;
  @include txt-element(button);
  margin-bottom: $ub-small-margin / 2;
  min-width: 200px;

  @include m(bordered) {
    @include button-hollow;
    @include button-hollow-style($ub-btn-base);
  }

  @include m(curriculum) {
    box-shadow: none;
    color: map-get($ub-txt-colors, #808080);
  }

  @include m(connect) {
    @include button-style($background: $ub-nav-link, $background-hover: auto, $color: $ub-primary);
    @include txt-element(button-connect);
    margin-bottom: 0;
  }

  @include m(faq) {
    min-width: 100px;
  }

  @include m(helpdesk) {
    @extend %ld-btn-padding;
    line-height: 17px;
    min-width: 150px;
  }

  @include m(subtle) {
   text-shadow: 1px 1px 1px rgba(0, 0, 0, .1);
  }

  @include m(disabled) {
    @include button-disabled;
    pointer-events: none;
  }

  @include m(force-disabled) {
    cursor: not-allowed !important;
    opacity: .25 !important;
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);

    @include m(#{$type}) {
      @include button-style($background: $color, $background-hover: auto, $color: $btn-color);
    }
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);

    @include m(bordered-#{$type}) {
      @include ub-button-hollow($background: $color, $color: $btn-color);
    }
  }

  @each $type, $color in $ub-buttons {
    @include m(2bordered-#{$type}) {
      @include ub-button-hollow($background: $color, $color: $color);
    }
  }
}

.o-ub-ld-btn {
  @extend %btn-shadow;
  @include button-base;
  @include txt-element(button);
  margin-bottom: $ub-small-margin / 2;
  min-width: 150px;

  @include m(bordered) {
    @extend %ld-btn-padding;
    @include ub-button-hollow($background: $ub-white, $color: $ub-white);
    opacity: .8;
    width: map-get($curriculum-map-width, base);

    &:hover, &:focus {
      background: none;
      border-color: $ub-white;
      opacity: 1;
    }
  }

  @include m(ela) {
    $color: map-get($ub-colorcodes, ela-base);
    @extend %ld-btn-padding;
    @include button-style($background: $ub-white, $background-hover: $ub-white, $color: $color);
    opacity: .9;

    &:hover, &:focus { opacity: 1; }
  }

  @include m(math) {
    $color: map-get($ub-colorcodes, math-base);
    @extend %ld-btn-padding;
    @include button-style($background: $ub-white, $background-hover: $ub-white, $color: $color);
    opacity: .9;

    &:hover, &:focus { opacity: 1; }
  }

  @include m(material) {
    &:hover, &:focus {
      background-color: map-get($ub-ld-colorcodes, material-overlay);
      color: $ub-white;
    }
  }
}
